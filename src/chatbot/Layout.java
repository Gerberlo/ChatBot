/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatbot;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.Normalizer;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;

/**
 *
 * @author GG
 */
public class Layout extends javax.swing.JFrame {

    private Nodo principal;
    public int altura;
    private int lastHeightPosition = 5;
    archivo archivo;
    ArrayList<String> diccionario = new ArrayList<>();

    String idNodoActual = "raiz";
    String clave = "";

    /**
     * Creates new form Layout
     */
    public Layout() {
        initComponents();
        this.archivo = new archivo();
        principal = null;

        this.construirArbol();
    }

    public void generarLabel(String texto, Color color, Color text, boolean cliente) {
        JLabel nvLbl = new JLabel();
        nvLbl.setText(texto);
        nvLbl.setOpaque(true);
        nvLbl.setBackground(color);
        nvLbl.setForeground(text);
        nvLbl.setFont(new Font("Serief", Font.BOLD, 12));
        LineBorder line = new LineBorder(color, 5, true);
        nvLbl.setBorder(line);

        this.jPanel2.add(nvLbl);
        Dimension size = nvLbl.getPreferredSize();
        Dimension size2 = this.jPanel2.getSize();

        if (cliente) {
            nvLbl.setBounds(size2.width - size.width - 15, lastHeightPosition, size.width + 10, size.height + 5);
        } else {
            nvLbl.setBounds(5, lastHeightPosition, size.width + 10, size.height + 5);
        }

        this.lastHeightPosition = +this.lastHeightPosition + size.height + 8;

    }

    public Nodo obtenerRaiz() {
        return principal;
    }

    private void peticion() {
        clave = this.jTextField1.getText().trim();
        this.generarLabel(clave, new Color(0, 120, 255), Color.white, true);
        if (idNodoActual.equals("menu")) {
            diccionario = archivo.leerArchivo("raiz");
        } else {
            diccionario = archivo.leerArchivo(idNodoActual);
        }

        idNodoActual = obtenerRespuesta(diccionario, clave, idNodoActual);

        //comentar este if al terminar todos los archivos diccionarios
        if (idNodoActual.length() > 23) {
            this.generarLabel("Su pedido le estara llegando en un tiempo estimado de 30 minutos", new Color(243, 245, 245), Color.black, false);
            this.jButton1.setEnabled(false);
            return;
        }
        this.jTextField1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 120, 255));
        jLabel2.setText("Tu:");

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField1.setBorder(null);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatbot/icons8-enviado-32.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(567, 800));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setPreferredSize(new java.awt.Dimension(567, 1000));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        peticion();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            peticion();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Layout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Layout().setVisible(true);
            }
        });
    }

    public void construirArbol() {
        //************************************ RAIZ ***********************************//

        Nodo raiz = new Nodo("raiz");
        generarLabel("Bienvenido a Breakfast, donde servimos los mejores desayunos", new Color(243, 245, 245), Color.black, false);

        generarLabel("=====Nuestro menu=====", new Color(243, 245, 245), Color.black, false);
        generarLabel("Panqueques", new Color(243, 245, 245), Color.black, false);
        generarLabel("Burritos", new Color(243, 245, 245), Color.black, false);
        generarLabel("También tenemos el nuevo Muffin, ¿le gustaría probarlo?", new Color(243, 245, 245), Color.black, false);

        this.principal = raiz;
        //***********************************NIVEL 1***********************************//
        Nodo n1i = raiz.HijoIzquierdo = new Nodo("n1i");
        n1i.texto = "¿Le gustaría doble por Q10 adicionales?";

        Nodo n1d = raiz.HijoDerecho = new Nodo("n1d");
        n1d.texto = "nuestras otras opciones, burritos y panqueques?";
        //***********************************NIVEL 2***********************************//
        Nodo n1i_n2i = n1i.HijoIzquierdo = new Nodo("n1i_n2i");
        n1i_n2i.texto = "¿Le gustaría beber café o jugo?";
        Nodo n1i_n2d = n1i.HijoDerecho = new Nodo("n1i_n2d");
        n1i_n2d.texto = "¿Le gustaría beber café o jugo?";

        Nodo n1d_n2i = n1d.HijoIzquierdo = new Nodo("n1d_n2i");
        n1d_n2i.texto = "¿Le gustaría su burrito agrandado por Q10.00 más?";
        Nodo n1d_n2d = n1d.HijoDerecho = new Nodo("n1d_n2d");
        n1d_n2d.texto = "¿Desea miel extra por Q5.00 más?";
        //***********************************NIVEL 3***********************************//
        Nodo n1i_n2i__n3i = n1i_n2i.HijoIzquierdo = new Nodo("n1i_n2i__n3i");
        n1i_n2i__n3i.texto = "¿Desea su café negro o con leche?";
        Nodo n1i_n2i__n3d = n1i_n2i.HijoDerecho = new Nodo("n1i_n2i__n3d");
        n1i_n2i__n3d.texto = "¿Desea su jugo de tamaño mediano por Q2.00 más?";

        Nodo n1i_n2d__n3i = n1i_n2d.HijoIzquierdo = new Nodo("n1i_n2d__n3i");
        n1i_n2d__n3i.texto = "¿Desea su café negro o con leche?";
        Nodo n1i_n2d__n3d = n1i_n2d.HijoDerecho = new Nodo("n1i_n2d__n3d");
        n1i_n2d__n3d.texto = "¿Desea su jugo de tamaño mediano por Q2.00 más?";

        Nodo n1d_n2i__n3i = n1d_n2i.HijoIzquierdo = new Nodo("n1d_n2i__n3i");
        n1d_n2i__n3i.texto = "¿Le gustaría beber café o jugo?";
        Nodo n1d_n2i__n3d = n1d_n2i.HijoDerecho = new Nodo("n1d_n2i__n3d");
        n1d_n2i__n3d.texto = "¿Le gustaría beber café o jugo?";

        Nodo n1d_n2d__n3i = n1d_n2d.HijoIzquierdo = new Nodo("n1d_n2d__n3i");
        n1d_n2d__n3i.texto = "¿Le gustaría beber café o jugo?";
        Nodo n1d_n2d__n3d = n1d_n2d.HijoDerecho = new Nodo("n1d_n2d__n3d");
        n1d_n2d__n3d.texto = "¿Le gustaría beber café o jugo?";
        //***********************************NIVEL 4***********************************//
        Nodo n1i_n2i__n3i___n4i = n1i_n2i__n3i.HijoIzquierdo = new Nodo("n1i_n2i__n3i___n4i");
        n1i_n2i__n3i___n4i.texto = "Le sugiero el delicioso pie de queso";
        Nodo n1i_n2i__n3i___n4d = n1i_n2i__n3i.HijoDerecho = new Nodo("n1i_n2i__n3i___n4d");
        n1i_n2i__n3i___n4d.texto = "¿Desea agregar Champurradas a su orden?";

        Nodo n1i_n2i__n3d___n4i = n1i_n2i__n3d.HijoIzquierdo = new Nodo("n1i_n2i__n3d___n4i");
        n1i_n2i__n3d___n4i.texto = "Tambien tenemos las deliciosas crepas de jamon y queso";
        Nodo n1i_n2i__n3d___n4d = n1i_n2i__n3d.HijoDerecho = new Nodo("n1i_n2i__n3d___n4d");
        n1i_n2i__n3d___n4d.texto = "¿Desea agregar papas fritas a su orden?";

        Nodo n1i_n2d__n3i___n4i = n1i_n2d__n3i.HijoIzquierdo = new Nodo("n1i_n2d__n3i___n4i");
        n1i_n2d__n3i___n4i.texto = "Le sugiero el delicioso pie de queso";
        Nodo n1i_n2d__n3i___n4d = n1i_n2d__n3i.HijoDerecho = new Nodo("n1i_n2d__n3i___n4d");
        n1i_n2d__n3i___n4d.texto = "¿Desea agregar champurradas a su orden?";

        Nodo n1i_n2d__n3d___n4i = n1i_n2d__n3d.HijoIzquierdo = new Nodo("n1i_n2d__n3d___n4i");
        n1i_n2d__n3d___n4i.texto = "Tambien tenemos las deliciosas crepas de jamon y queso";
        Nodo n1i_n2d__n3d___n4d = n1i_n2d__n3d.HijoDerecho = new Nodo("n1i_n2d__n3d___n4d");
        n1i_n2d__n3d___n4d.texto = "¿Desea agregar papas fritas a su orden?";

        Nodo n1d_n2i__n3i___n4i = n1d_n2i__n3i.HijoIzquierdo = new Nodo("n1d_n2i__n3i___n4i");
        n1d_n2i__n3i___n4i.texto = "¿Su café le gustaría Negro o con Leche?";
        Nodo n1d_n2i__n3i___n4d = n1d_n2i__n3i.HijoDerecho = new Nodo("n1d_n2i__n3i___n4d");
        n1d_n2i__n3i___n4d.texto = "¿Le gustaría mediano por Q2 más?";

        Nodo n1d_n2i__n3d___n4i = n1d_n2i__n3d.HijoIzquierdo = new Nodo("n1d_n2i__n3d___n4i");
        n1d_n2i__n3d___n4i.texto = "¿Su café le gustaría Negro o con Leche?";
        Nodo n1d_n2i__n3d___n4d = n1d_n2i__n3d.HijoDerecho = new Nodo("n1d_n2i__n3d___n4d");
        n1d_n2i__n3d___n4d.texto = "¿Le gustaría mediano por Q2 más?";

        Nodo n1d_n2d__n3i___n4i = n1d_n2d__n3i.HijoIzquierdo = new Nodo("n1d_n2d__n3i___n4i");
        n1d_n2d__n3i___n4i.texto = "¿Su café le gustaría Negro o con Leche?";
        Nodo n1d_n2d__n3i___n4d = n1d_n2d__n3i.HijoDerecho = new Nodo("n1d_n2d__n3i___n4d");
        n1d_n2d__n3i___n4d.texto = "¿Le gustaría mediano por Q2 más?";

        Nodo n1d_n2d__n3d___n4i = n1d_n2d__n3d.HijoIzquierdo = new Nodo("n1d_n2d__n3d___n4i");
        n1d_n2d__n3d___n4i.texto = "¿Su café le gustaría Negro o con Leche?";
        Nodo n1d_n2d__n3d___n4d = n1d_n2d__n3d.HijoDerecho = new Nodo("n1d_n2d__n3d___n4d");
        n1d_n2d__n3d___n4d.texto = "¿Le gustaría mediano por Q2 más?";
        //***********************************NIVEL 5***********************************//
        Nodo n1i_n2i__n3i___n4i____n5i = n1i_n2i__n3i___n4i.HijoIzquierdo = new Nodo("n1i_n2i__n3i___n4i____n5i");
        n1i_n2i__n3i___n4i____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2i__n3i___n4i____n5d = n1i_n2i__n3i___n4i.HijoDerecho = new Nodo("n1i_n2i__n3i___n4i____n5d");
        n1i_n2i__n3i___n4i____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2i__n3i___n4d____n5i = n1i_n2i__n3i___n4d.HijoIzquierdo = new Nodo("n1i_n2i__n3i___n4d____n5i");
        n1i_n2i__n3i___n4d____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2i__n3i___n4d____n5d = n1i_n2i__n3i___n4d.HijoDerecho = new Nodo("n1i_n2i__n3i___n4d____n5d");
        n1i_n2i__n3i___n4d____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2i__n3d___n4i____n5i = n1i_n2i__n3d___n4i.HijoIzquierdo = new Nodo("n1i_n2i__n3d___n4i____n5i");
        n1i_n2i__n3d___n4i____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2i__n3d___n4i____n5d = n1i_n2i__n3d___n4i.HijoDerecho = new Nodo("n1i_n2i__n3d___n4i____n5d");
        n1i_n2i__n3d___n4i____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2i__n3d___n4d____n5i = n1i_n2i__n3d___n4d.HijoIzquierdo = new Nodo("n1i_n2i__n3d___n4d____n5i");
        n1i_n2i__n3d___n4d____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2i__n3d___n4d____n5d = n1i_n2i__n3d___n4d.HijoDerecho = new Nodo("n1i_n2i__n3d___n4d____n5d");
        n1i_n2i__n3d___n4d____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2d__n3i___n4i____n5i = n1i_n2d__n3i___n4i.HijoIzquierdo = new Nodo("n1i_n2d__n3i___n4i____n5i");
        n1i_n2d__n3i___n4i____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2d__n3i___n4i____n5d = n1i_n2d__n3i___n4i.HijoDerecho = new Nodo("n1i_n2d__n3i___n4i____n5d");
        n1i_n2d__n3i___n4i____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2d__n3i___n4d____n5i = n1i_n2d__n3i___n4d.HijoIzquierdo = new Nodo("n1i_n2d__n3i___n4d____n5i");
        n1i_n2d__n3i___n4d____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2d__n3i___n4d____n5d = n1i_n2d__n3i___n4d.HijoDerecho = new Nodo("n1i_n2d__n3i___n4d____n5d");
        n1i_n2d__n3i___n4d____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2d__n3d___n4i____n5i = n1i_n2d__n3d___n4i.HijoIzquierdo = new Nodo("n1i_n2d__n3d___n4i____n5i");
        n1i_n2d__n3d___n4i____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2d__n3d___n4i____n5d = n1i_n2d__n3d___n4i.HijoDerecho = new Nodo("n1i_n2d__n3d___n4i____n5d");
        n1i_n2d__n3d___n4i____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1i_n2d__n3d___n4d____n5i = n1i_n2d__n3d___n4d.HijoIzquierdo = new Nodo("n1i_n2d__n3d___n4d____n5i");
        n1i_n2d__n3d___n4d____n5i.texto = "Fue un gusto atenderle el monto es de su orden es de Q,35.00";

        Nodo n1i_n2d__n3d___n4d____n5d = n1i_n2d__n3d___n4d.HijoDerecho = new Nodo("n1i_n2d__n3d___n4d____n5d");
        n1i_n2d__n3d___n4d____n5d.texto = "Fue un gusto atenderle el monto es de su orden es de Q,25.00";

        Nodo n1d_n2i__n3i___n4i____n5i = n1d_n2i__n3i___n4i.HijoIzquierdo = new Nodo("n1d_n2i__n3i___n4i____n5i");
        n1d_n2i__n3i___n4i____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 21.00";

        Nodo n1d_n2i__n3i___n4i____n5d = n1d_n2i__n3i___n4i.HijoDerecho = new Nodo("n1d_n2i__n3i___n4i____n5d");
        n1d_n2i__n3i___n4i____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 22.00";

        Nodo n1d_n2i__n3i___n4d____n5i = n1d_n2i__n3i___n4d.HijoIzquierdo = new Nodo("n1d_n2i__n3i___n4d____n5i");
        n1d_n2i__n3i___n4d____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 23.00";

        Nodo n1d_n2i__n3i___n4d____n5d = n1d_n2i__n3i___n4d.HijoDerecho = new Nodo("n1d_n2i__n3i___n4d____n5d");
        n1d_n2i__n3i___n4d____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 21.00";

        Nodo n1d_n2i__n3d___n4i____n5i = n1d_n2i__n3d___n4i.HijoIzquierdo = new Nodo("n1d_n2i__n3d___n4i____n5i");
        n1d_n2i__n3d___n4i____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 31.00";

        Nodo n1d_n2i__n3d___n4i____n5d = n1d_n2i__n3d___n4i.HijoDerecho = new Nodo("n1d_n2i__n3d___n4i____n5d");
        n1d_n2i__n3d___n4i____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 32.00";

        Nodo n1d_n2i__n3d___n4d____n5i = n1d_n2i__n3d___n4d.HijoIzquierdo = new Nodo("n1d_n2i__n3d___n4d____n5i");
        n1d_n2i__n3d___n4d____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 33.00";

        Nodo n1d_n2i__n3d___n4d____n5d = n1d_n2i__n3d___n4d.HijoDerecho = new Nodo("n1d_n2i__n3d___n4d____n5d");
        n1d_n2i__n3d___n4d____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 31.00";

        Nodo n1d_n2d__n3i___n4i____n5i = n1d_n2d__n3i___n4i.HijoIzquierdo = new Nodo("n1d_n2d__n3i___n4i____n5i");
        n1d_n2d__n3i___n4i____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 25.00";

        Nodo n1d_n2d__n3i___n4i____n5d = n1d_n2d__n3i___n4i.HijoDerecho = new Nodo("n1d_n2d__n3i___n4i____n5d");
        n1d_n2d__n3i___n4i____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 26.00";

        Nodo n1d_n2d__n3i___n4d____n5i = n1d_n2d__n3i___n4d.HijoIzquierdo = new Nodo("n1d_n2d__n3i___n4d____n5i");
        n1d_n2d__n3i___n4d____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 27.00";

        Nodo n1d_n2d__n3i___n4d____n5d = n1d_n2d__n3i___n4d.HijoDerecho = new Nodo("n1d_n2d__n3i___n4d____n5d");
        n1d_n2d__n3i___n4d____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 25.00";

        Nodo n1d_n2d__n3d___n4i____n5i = n1d_n2d__n3d___n4i.HijoIzquierdo = new Nodo("n1d_n2d__n3d___n4i____n5i");
        n1d_n2d__n3d___n4i____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 30.00";

        Nodo n1d_n2d__n3d___n4i____n5d = n1d_n2d__n3d___n4i.HijoDerecho = new Nodo("n1d_n2d__n3d___n4i____n5d");
        n1d_n2d__n3d___n4i____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 31.00";

        Nodo n1d_n2d__n3d___n4d____n5i = n1d_n2d__n3d___n4d.HijoIzquierdo = new Nodo("n1d_n2d__n3d___n4d____n5i");
        n1d_n2d__n3d___n4d____n5i.texto = "Fue un gusto atenderle el monto de su orden es de Q. 32.00";

        Nodo n1d_n2d__n3d___n4d____n5d = n1d_n2d__n3d___n4d.HijoDerecho = new Nodo("n1d_n2d__n3d___n4d____n5d");
        n1d_n2d__n3d___n4d____n5d.texto = "Fue un gusto atenderle el monto de su orden es de Q. 30.00";
        //*****************************************************************************//
    }

    public static String normalizeString(String str) {
        str = Normalizer.normalize(str, Normalizer.Form.NFKD);
        String nuevo = str.replaceAll("[^a-z,^A-Z,^0-9, ,]", "");
        return nuevo.replaceAll(",", "");
    }

    public String obtenerRespuesta(ArrayList<String> lista, String clave, String nodoActual) {
        String idSUbArbol = "";
        boolean existe = false;
        //sirve para eliminar espacion entre las palabras ingresadas por el usuario
        clave = this.normalizeString(clave);
        String[] cl = clave.split(" ");
        String nuevaClave = "";
        for (int i = 0; i < cl.length; i++) {
            if (!cl[i].isEmpty()) {
                nuevaClave += cl[i] + " ";
            }
        }
        //---------------------------------------
        clave = nuevaClave.trim();
        for (int i = 0; i < lista.size(); i++) {
            String[] arr = lista.get(i).split(",");
            if (arr[0].equalsIgnoreCase(clave)) {
                String respuestaAnterior = this.buscar(arr[1]);
                generarLabel(respuestaAnterior, new Color(243, 245, 245), Color.black, false);

                idSUbArbol = arr[1];
                existe = true;
            }
        }
        if (!existe) {
            String respAnt = this.buscar(nodoActual);
            generarLabel("Disculpe ?, " + respAnt + "", new Color(243, 245, 245), Color.black, false);
            return nodoActual;
        }
        return idSUbArbol;
    }

    public String buscar(String id) {
        Nodo reco = obtenerRaiz();
        String var = "Lo siento, no entendí";
        while (reco != null) {
            switch (id) {
                case "menu":
                    generarLabel("=====Nuestro menu=====", new Color(243, 245, 245), Color.black, false);
                    generarLabel("Muffin", new Color(243, 245, 245), Color.black, false);
                    generarLabel("Panqueques", new Color(243, 245, 245), Color.black, false);
                    generarLabel("Burritos", new Color(243, 245, 245), Color.black, false);
                    return "¿Que desea ordenar?";
                case "salir":
                    return "Fué un gusto atenderte, que pases un felíz día";
                case "raiz":
                    return "¿le gustaría probar el nuevo McMuffin Chapín?";
                /*NIVEL 1*/
                case "n1i":
                    return reco.getHijoIzquierdo().texto;
                case "n1d":
                    return reco.getHijoDerecho().texto;
                /*NIVEL 2*/
                case "n1i_n2i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2d":
                    return reco.getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2i":
                    return reco.getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2d":
                    return reco.getHijoDerecho().getHijoDerecho().texto;
                /* NIVEL 3*/
                case "n1i_n2i__n3i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2i__n3d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2d__n3i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2d__n3d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2i__n3i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2i__n3d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2d__n3i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2d__n3d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                /* NIVEL 4 */
                case "n1i_n2i__n3i___n4i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2i__n3i___n4d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2i__n3d___n4i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2i__n3d___n4d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1i_n2d__n3i___n4i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2d__n3i___n4d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2d__n3d___n4i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2d__n3d___n4d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2i__n3i___n4i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2i__n3i___n4d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2i__n3d___n4i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2i__n3d___n4d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2d__n3i___n4i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2d__n3i___n4d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2d__n3d___n4i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2d__n3d___n4d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                /* NIVEL 5 */
                case "n1i_n2i__n3i___n4i____n5i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2i__n3i___n4i____n5d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2i__n3i___n4d____n5i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2i__n3i___n4d____n5d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1i_n2i__n3d___n4i____n5i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2i__n3d___n4i____n5d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2i__n3d___n4d____n5i":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2i__n3d___n4d____n5d":
                    return reco.getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                case "n1i_n2d__n3i___n4i____n5i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2d__n3i___n4i____n5d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2d__n3i___n4d____n5i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2d__n3i___n4d____n5d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1i_n2d__n3d___n4i____n5i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1i_n2d__n3d___n4i____n5d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1i_n2d__n3d___n4d____n5i":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1i_n2d__n3d___n4d____n5d":
                    return reco.getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2i__n3i___n4i____n5i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2i__n3i___n4i____n5d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2i__n3i___n4d____n5i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2i__n3i___n4d____n5d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2i__n3d___n4i____n5i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2i__n3d___n4i____n5d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2i__n3d___n4d____n5i":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2i__n3d___n4d____n5d":
                    return reco.getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2d__n3i___n4i____n5i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2d__n3i___n4i____n5d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2d__n3i___n4d____n5i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2d__n3i___n4d____n5d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().getHijoDerecho().texto;
                case "n1d_n2d__n3d___n4i____n5i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoIzquierdo().texto;
                case "n1d_n2d__n3d___n4i____n5d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().getHijoDerecho().texto;
                case "n1d_n2d__n3d___n4d____n5i":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoIzquierdo().texto;
                case "n1d_n2d__n3d___n4d____n5d":
                    return reco.getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoDerecho().getHijoDerecho().texto;
                default:
                    return var;
            }
        }
        return var;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
